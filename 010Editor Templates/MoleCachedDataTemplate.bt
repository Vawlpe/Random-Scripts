//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: MoleCachedDataTemplate.bt
//   Authors: Vawlpe
//   Version: 0.1
//   Purpose: Easily view cached data generated by Mole
//  Category: Documents
// File Mask: 
//  ID Bytes: 
//   History: 
//   0.1   2021-11-09 Vawlpe: Graphics template
//   0.2   2020-11-16 Vawlpe: Pointer Table template
//------------------------------------------------
BigEndian();
struct FILE {
    struct G_HEADER {
        ushort Type <bgcolor=0x0000FF>;
        byte info[14] <bgcolor=0xFF00FF>;
    } g_header;
    struct DATA {
        if (file.g_header.Type == 0) // Graphics
        {
            typedef struct {
                struct HEADER {
                    byte Format <bgcolor=0x0000FF>;
                    ushort Size <bgcolor=0x00FF00>;
                } header;
                byte Data[this.header.Size] <bgcolor=0xFF0000>;
            } CHUNK;
            
            local int i;
            for (i = 16; i < FileSize(); i++)
            {
                CHUNK chunk;
                i+=chunk.header.Size+3;
            }
        }
        else if (file.g_header.Type == 1) // Pointer Table
        {
            local int i;
            for (i = 16; i < FileSize(); i+=8)
            {
                uint Pointer <bgcolor=0xFF0000>;
                if (i+4 < FileSize())
                {
                    uint Pointer <bgcolor=0xFFFF00>;
                }
            }
        }
    } data;
} file;
